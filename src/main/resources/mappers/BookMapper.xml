<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.bookjuck.book.BookMapper">

    <insert id="insBookApi">
        insert into t_book_api
        ( title, author, pubDate, description, isbn, isbn13, itemId, priceStandard
        , cover, categoryId, publisher, adult, customerReviewRank, bestRank, categoryName)
        values (#{title}, #{author}, #{pubDate}, #{description}, #{isbn},
                #{isbn13}, #{itemId}, #{priceStandard}, #{cover},
                #{categoryId}, #{publisher}, #{adult}, #{customerReviewRank}, #{bestRank}, #{categoryName})
    </insert>

    <select id="sel" resultType="BookDto">
        select *
        FROM t_book_api
        where categoryName LIKE #{categoryBookjuck}
            LIMIT 50
    </select>

    <select id="configSel" resultType="ResultVo">
        select COUNT(*) AS result FROM t_book_api
        WHERE isbn = #{isbn}
    </select>


    <select id="sel2" resultType="BookDto">
        SELECT * FROM t_book_api
        where categoryName LIKE #{categoryBookjuck}


        <if test="selectVal.equals('new')">
            ORDER BY
            pubDate desc
        </if>
        <if test="selectVal.equals('popular')">
            ORDER BY
            customerReviewRank desc
        </if>
        <if test="selectVal.equals('price')">
            ORDER BY
            priceStandard desc
        </if>
        <if test="selectVal.equals('not')">

        </if>

        LIMIT 50


    </select>

</mapper>